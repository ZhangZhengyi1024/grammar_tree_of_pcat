./_pcat_parser tests/test16.pcat
program body (4,11-29,4)
  declarations (4,11-19,9)
    var-decl (5,9-5,37)
      identifier: I (5,9-5,10)
      identifier: J (5,12-5,13)
      identifier: ANSWER (5,15-5,21)
      type (5,24-5,31)
        identifier: INTEGER (5,24-5,31)
      init value
        INTEGER: 0 (5,35-5,36)
    procedure-decl (6,15-19,9)
      procedure name
        identifier: FACTORIAL (6,15-6,24)
      no parameters
      procedure body (6,29-19,8)
        declarations (6,29-14,15)
          procedure-decl (8,11-11,8)
            procedure name
              identifier: FACT (8,11-8,15)
            no parameters
            procedure body (8,20-11,7)
              statements (9,6-10,45)
                procedure-call (9,6-9,12)
                  procedure name
                    identifier: MULT (9,6-9,10)
                  no arguments
                if-statement (10,6-10,45)
                  if-part
                    condition
                      binary-op (10,9-10,15)
                        l-value: id-access (10,9-10,10)
                          identifier: J (10,9-10,10)
                        op: <>
                        l-value: id-access (10,14-10,15)
                          identifier: I (10,14-10,15)
                    statements (10,21-10,40)
                      assignment statement (10,21-10,32)
                        l-value: id-access (10,21-10,22)
                          identifier: J (10,21-10,22)
                        expression
                          binary-op (10,26-10,31)
                            l-value: id-access (10,26-10,27)
                              identifier: J (10,26-10,27)
                            op: +
                            INTEGER: 1 (10,30-10,31)
                      procedure-call (10,33-10,39)
                        procedure name
                          identifier: FACT (10,33-10,37)
                        no arguments
          procedure-decl (12,4-14,15)
            procedure name
              identifier: MULT (12,4-12,8)
            no parameters
            procedure body (12,13-14,14)
              statements (13,13-13,34)
                assignment statement (13,13-13,34)
                  l-value: id-access (13,13-13,19)
                    identifier: ANSWER (13,13-13,19)
                  expression
                    binary-op (13,23-13,33)
                      l-value: id-access (13,23-13,29)
                        identifier: ANSWER (13,23-13,29)
                      op: *
                      l-value: id-access (13,32-13,33)
                        identifier: J (13,32-13,33)
        statements (16,2-18,9)
          assignment statement (16,2-16,14)
            l-value: id-access (16,2-16,8)
              identifier: ANSWER (16,2-16,8)
            expression
              INTEGER: 1 (16,12-16,13)
          assignment statement (17,2-17,9)
            l-value: id-access (17,2-17,3)
              identifier: J (17,2-17,3)
            expression
              INTEGER: 1 (17,7-17,8)
          procedure-call (18,2-18,8)
            procedure name
              identifier: FACT (18,2-18,6)
            no arguments
  statements (21,5-28,9)
    write statement (21,5-21,65)
        string: "The first 5 factorials are (in descending order):" (21,12-21,63)
    assignment statement (22,5-22,12)
      l-value: id-access (22,5-22,6)
        identifier: I (22,5-22,6)
      expression
        INTEGER: 5 (22,10-22,11)
    loop-statement (23,5-28,9)
      statements (24,2-27,13)
        if-statement (24,2-24,27)
          if-part
            condition
              binary-op (24,5-24,11)
                l-value: id-access (24,5-24,6)
                  identifier: I (24,5-24,6)
                op: <=
                INTEGER: 0 (24,10-24,11)
            statements (24,17-24,22)
              exit-statement (24,17-24,22)
        procedure-call (25,9-25,20)
          procedure name
            identifier: FACTORIAL (25,9-25,18)
          no arguments
        write statement (26,9-26,48)
            string: "FACTORIAL(" (26,15-26,27)
          expression: 
            l-value: id-access (26,29-26,30)
              identifier: I (26,29-26,30)
            string: ") = " (26,32-26,38)
          expression: 
            l-value: id-access (26,40-26,46)
              identifier: ANSWER (26,40-26,46)
        assignment statement (27,2-27,13)
          l-value: id-access (27,2-27,3)
            identifier: I (27,2-27,3)
          expression
            binary-op (27,7-27,12)
              l-value: id-access (27,7-27,8)
                identifier: I (27,7-27,8)
              op: -
              INTEGER: 1 (27,11-27,12)
